--By setting the SCHEMA as FILM there's no need to refer to the SCHEME on each INSERT
-- SET SCHEMA = MOVIEINDEX;

CREATE OR REPLACE TRIGGER INCOME_MOVIE
    BEFORE UPDATE OF INCOME ON MOVIEINDEX.MOVIE
    REFERENCING OLD AS OLD_MOVIE
                NEW AS NEW_MOVIE
    FOR EACH ROW MODE DB2SQL
    WHEN (NEW_MOVIE.INCOME < OLD_MOVIE.INCOME )
    BEGIN ATOMIC
        SIGNAL SQLSTATE '75001' ('INVALID INCOME, IT MOST BE HIGHER THAN THE LAST ONE')
    END;

CREATE OR REPLACE TRIGGER VALID_INCOME
    BEFORE INSERT ON MOVIEINDEX.MOVIE
    REFERENCING NEW AS NEW_MOVIE
    FOR EACH ROW MODE DB2SQL
    WHEN (NEW_MOVIE.INCOME <= 0)
    BEGIN ATOMIC
        SIGNAL SQLSTATE '75001' ('INCOME MUST BE MORE THAN 0')
    END;

CREATE OR REPLACE TRIGGER VALID_COST
    BEFORE INSERT ON MOVIEINDEX.MOVIE
    REFERENCING NEW AS NEW_MOVIE
    FOR EACH ROW MODE DB2SQL
    WHEN (NEW_MOVIE.COST <= 0)
    BEGIN ATOMIC
        SIGNAL SQLSTATE '75001' ('COST MUST BE MORE THAN 0')
    END;

CREATE OR REPLACE TRIGGER COST_MOVIE
    BEFORE UPDATE OF COST ON MOVIEINDEX.MOVIE
    REFERENCING OLD AS OLD_MOVIE
                NEW AS NEW_MOVIE
    FOR EACH ROW MODE DB2SQL
    WHEN (NEW_MOVIE.COST < OLD_MOVIE.COST )
    BEGIN ATOMIC
        SIGNAL SQLSTATE '75001' ('INVALID COST, IT MOST BE HIGHER THAN THE LAST ONE')
    END;

CREATE OR REPLACE TRIGGER VALID_DURATION
    BEFORE INSERT ON MOVIEINDEX.MOVIE
    FOR EACH ROW MODE DB2SQL
    WHEN (MOVIE.DURATION <= 0)
    BEGIN ATOMIC
        SIGNAL SQLSTATE '75001' ('DURATION MUST BE MORE THAN 0')
    END;
@
