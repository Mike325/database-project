--By setting the SCHEMA as FILM there's no need to refer to the SCHEME on each table creation
SET SCHEMA = MOVIEINDEX;

-- Get MOVIE by COUNTRYID

CREATE VIEW COUNTRYID_MOVIES (COUNTRY, MOVIENAME, RELEASE_DATE)
    AS SELECT COUNTRY.NAME, MOVIE.NAME, MOVIE.RELEASE_DATE
    FROM MOVIE, COUNTRY
    WHERE MOVIE.COUNTRYID = COUNTRY.ID;
    --ORDER BY COUNTRYID

-- Get the 10 MOVIE with the highest income
CREATE VIEW TOP_INCOME_MOVIES (
    NAME,
    DURATION,
    COST,
    INCOME,
    RELEASE_DATE,
    CLASIFICATION,
    STUDIO,
    DIRECTOR
)
    AS SELECT
        MOVIE.NAME,
        MOVIE.DURATION,
        MOVIE.COST,
        MOVIE.INCOME,
        MOVIE.RELEASE_DATE,
        CLASIFICATION.NAME,
        STUDIO.NAME,
        DIRECTOR.NAME
    FROM
        MOVIE,
        STUDIO,
        DIRECTOR,
        CLASIFICATION
    WHERE
        MOVIE.CLASIFICATIONID = CLASIFICATION.ID AND
        MOVIE.DIRECTORID = DIRECTOR.ID AND
        MOVIE.STUDIOID = STUDIO.ID;
    --ORDER BY INCOME DESC
    --FETCH FIRST 10 ROWS ONLY;

-- Get the 10 MOVIE with the lowest income
CREATE VIEW LOWEST_INCOME_MOVIES (
    NAME,
    DURATION,
    COST,
    INCOME,
    RELEASE_DATE,
    CLASIFICATION,
    STUDIO,
    DIRECTOR
)
    AS SELECT
        MOVIE.NAME,
        MOVIE.DURATION,
        MOVIE.COST,
        MOVIE.INCOME,
        MOVIE.RELEASE_DATE,
        CLASIFICATION.NAME,
        STUDIO.NAME,
        DIRECTOR.NAME
    FROM
        MOVIE,
        STUDIO,
        DIRECTOR,
        CLASIFICATION
    WHERE
        MOVIE.CLASIFICATIONID = CLASIFICATION.ID AND
        MOVIE.DIRECTORID = DIRECTOR.ID AND
        MOVIE.STUDIOID = STUDIO.ID;
    --ORDER BY INCOME ASC
    --FETCH FIRST 10 ROWS ONLY;

-- Get the 10 most expensive MOVIE
CREATE VIEW TOP_EXPENSIVE_MOVIES (
    NAME,
    DURATION,
    COST,
    INCOME,
    RELEASE_DATE,
    CLASIFICATION,
    STUDIO,
    DIRECTOR
)
    AS SELECT
        MOVIE.NAME,
        MOVIE.DURATION,
        MOVIE.COST,
        MOVIE.INCOME,
        MOVIE.RELEASE_DATE,
        CLASIFICATION.NAME,
        STUDIO.NAME,
        DIRECTOR.NAME
    FROM
        MOVIE,
        STUDIO,
        DIRECTOR,
        CLASIFICATION
    WHERE
        MOVIE.CLASIFICATIONID = CLASIFICATION.ID AND
        MOVIE.DIRECTORID = DIRECTOR.ID AND
        MOVIE.STUDIOID = STUDIO.ID;
    --ORDER BY COST DESC
    --FETCH FIRST 10 ROWS ONLY;

-- Get the 10 MOVIE with the highest income
CREATE VIEW MOVIES_REVENUES (
    NAME,
    DURATION,
    COST,
    INCOME,
    REVENUE,
    RELEASE_DATE,
    COUNTRY,
    STUDIO,
    DIRECTOR
)
    AS SELECT
        MOVIE.NAME,
        MOVIE.DURATION,
        MOVIE.COST,
        MOVIE.INCOME,
        SUM(INCOME - COST),
        MOVIE.RELEASE_DATE,
        COUNTRY.NAME,
        STUDIO.NAME,
        DIRECTOR.NAME
    FROM
        MOVIE,
        COUNTRY,
        STUDIO,
        DIRECTOR
    WHERE
        COUNTRY.ID  = MOVIE.COUNTRYID AND
        STUDIO.ID   = MOVIE.STUDIOID AND
        DIRECTOR.ID = MOVIE.STUDIOID
    -- ORDER BY REVENUE DESC;
